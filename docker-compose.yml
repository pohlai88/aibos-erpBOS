services:
  db:
    image: postgres:15
    container_name: aibos-postgres
    environment:
      POSTGRES_USER: aibos
      POSTGRES_PASSWORD: aibos
      POSTGRES_DB: aibos
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aibos -d aibos"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  bff:
    build:
      context: .
      dockerfile: apps/bff/Dockerfile
    container_name: aibos-bff
    environment:
      DATABASE_URL: postgresql://aibos:aibos@db:5432/aibos
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: aibos-web
    environment:
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      bff:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: aibos-worker
    environment:
      DATABASE_URL: postgresql://aibos:aibos@db:5432/aibos
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "worker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  dbdata:
    driver: local
