{
  "name": "aibos",
  "description": "AI-powered ERP Business Operating System",
  "version": "1.0.0",
  "author": "",
  "dependencies": {
    "@asteasolutions/zod-to-openapi": "^7.3.4",
    "@types/json5": "^2.2.0",
    "csv-parse": "^6.1.0",
    "json5": "^2.2.3",
    "next": "15.5.4",
    "openapi-typescript": "^7.9.1",
    "pg": "^8.16.3",
    "react": "19.1.1",
    "react-dom": "19.1.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@mermaid-js/mermaid-cli": "^10.9.1",
    "@next/bundle-analyzer": "^15.5.4",
    "@redocly/cli": "^2.3.0",
    "@types/node": "24.6.0",
    "@types/pg": "^8.15.5",
    "@types/yaml": "^1.9.7",
    "@typescript-eslint/eslint-plugin": "8.45.0",
    "@typescript-eslint/parser": "8.45.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "depcheck": "^1.4.7",
    "dependency-cruiser": "^17.0.2",
    "drizzle-kit": "^0.31.5",
    "drizzle-orm": "^0.44.5",
    "eslint": "^9.36.0",
    "eslint-plugin-boundaries": "^5.0.1",
    "fast-glob": "^3.3.3",
    "happy-dom": "^19.0.2",
    "madge": "^8.0.0",
    "npm-check-updates": "^19.0.0",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "snyk": "^1.1299.1",
    "syncpack": "^13.0.4",
    "ts-morph": "^27.0.0",
    "ts-node": "^10.9.2",
    "tsup": "^8.5.0",
    "tsx": "^4.20.6",
    "turbo": "^2.5.8",
    "typescript": "5.9.2",
    "vitest": "^3.2.4",
    "yaml": "^2.8.1"
  },
  "engines": {
    "node": "22.18.0",
    "pnpm": "10.17.1"
  },
  "keywords": [
    "ai",
    "business",
    "erp",
    "monorepo",
    "typescript"
  ],
  "license": "ISC",
  "packageManager": "pnpm@10.17.1",
  "pnpm": {
    "peerDependencyRules": {
      "ignoreMissing": [
        "@types/react",
        "@types/react-dom"
      ],
      "allowedVersions": {
        "react": "19.1.1",
        "react-dom": "19.1.1"
      }
    },
    "ignoredBuiltDependencies": [
      "esbuild",
      "sharp"
    ]
  },
  "private": true,
  "scripts": {
    "// === API Standardization ===": "",
    "// === Code Formatting ===": "",
    "// === OpenAPI Documentation ===": "",
    "// === Testing ===": "",
    "// === Dependency Analysis ===": "",
    "deps:analyze": "dependency-cruiser --config .dependency-cruiser.js .",
    "deps:check": "depcheck",
    "deps:graph": "madge --image reports/deps-graph.svg --exclude 'node_modules|dist|build|.next' .",
    "deps:circular": "madge --circular --exclude 'node_modules|dist|build|.next' .",
    "deps:outdated": "npm-check-updates",
    "deps:update": "npm-check-updates -u && pnpm install",
    "deps:security": "pnpm audit; snyk test",
    "deps:bundle": "ANALYZE=true pnpm build",
    "// === Enterprise Architecture Validation ===": "",
    "arch:validate": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type err",
    "arch:validate:text": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type text",
    "arch:validate:json": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type json --output-to reports/arch-violations.json",
    "arch:graph": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type dot | dot -Tsvg > reports/arch-dependency-graph.svg",
    "arch:graph:png": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type dot | dot -Tpng > reports/arch-dependency-graph.png",
    "arch:archi": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type archi --output-to reports/arch-high-level.dot",
    "arch:layers": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type dot --focus '^packages/(contracts|services|adapters)' | dot -Tsvg > reports/arch-layers.svg",
    "arch:html": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts --output-type html --output-to reports/arch-violations.html",
    "arch:report": "pnpm arch:validate:json; pnpm arch:graph; pnpm arch:html",
    "arch:ci": "dependency-cruiser --config .dependency-cruiser.js apps packages scripts",
    "// === Lineage & Mapping ===": "",
    "deps:map": "node scripts/dependency-mapper.mjs --format json --output reports/dependency-map.json --fail-on violations",
    "deps:html": "node scripts/dependency-mapper.mjs --format html --output reports/dependency-map.html --fail-on none --samples 8",
    "deps:mermaid": "node scripts/dependency-mapper.mjs --format mermaid --output reports/dependency-map.mmd --fail-on none",
    "deps:lineage": "node scripts/data-lineage-analyzer.mjs --output reports/sql-lineage.json",
    "deps:dashboard": "node scripts/generate-dashboard.mjs --output reports/dashboard.html",
    "deps:report": "pnpm deps:map; pnpm deps:html; pnpm deps:lineage; pnpm deps:dashboard",
    "deps:report:ci": "node scripts/dependency-mapper.mjs --format html --output reports/dependency-map.html --fail-on violations --samples 10",
    "deps:view": "start reports/dashboard.html",
    "// === Diagrams ===": "",
    "docs:diagrams": "mmdc -i docs/architecture.mmd -o reports/architecture.svg",
    "api:check": "pnpm api:wrap:check && pnpm api:drift:check",
    "api:complex:demo": "node scripts/fix-complex-api-demo.js --dry --verbose",
    "api:complex:dry": "node scripts/fix-complex-api-patterns.js --dry --verbose",
    "api:complex:fix": "node scripts/fix-complex-api-patterns.js",
    "api:complex:force": "node scripts/fix-complex-api-patterns.js --force --wrap-functions --fix-switch",
    "api:complex:safe": "node scripts/fix-complex-api-patterns.js --dry --verbose --wrap-functions --fix-switch",
    "api:drift:check": "tsx scripts/check-openapi-vs-filesystem.ts",
    "api:guards:dry": "node scripts/api-security.js --dry --limit --audit-attempt --verbose",
    "api:lint": "eslint apps/bff/app/api --max-warnings=0",
    "api:pattern:clean": "tsx scripts/fix-api-patterns.ts --remove-options",
    "api:pattern:dry": "tsx scripts/fix-api-patterns.ts --dry",
    "api:pattern:fix": "tsx scripts/fix-api-patterns.ts",
    "api:pattern:safe": "tsx scripts/fix-api-patterns.ts --dry --force",
    "api:security": "node scripts/api-security.js",
    "api:security:dry": "node scripts/api-security.js --dry",
    "api:security:force": "node scripts/api-security.js --force",
    "api:security:full": "node scripts/api-security.js --limit --audit-attempt --force",
    "api:security:guards": "node scripts/api-security.js --limit --audit-attempt",
    "api:security:policy": "node scripts/api-security.js --policy=security-policy.json",
    "api:security:verbose": "node scripts/api-security.js --dry --verbose",
    "api:security:wrap": "node scripts/api-security.js --wrap --limit --audit-attempt",
    "api:wrap:check": "tsx scripts/check-api-wrappers.ts",
    "build": "turbo run build",
    "build:types": "turbo run build:types",
    "build:types:force": "turbo run build:types -- --force",
    "changeset": "changeset",
    "clean": "rimraf --glob packages/**/dist apps/**/.next packages/**/*.tsbuildinfo apps/**/*.tsbuildinfo",
    "contracts:gen": "pnpm -w -F @aibos/contracts gen:openapi && pnpm -w -F @aibos/api-client gen:types",
    "db:dashboard": "powershell -ExecutionPolicy Bypass -File ./scripts/db-status-web.ps1 -Open",
    "db:down": "docker compose stop db",
    "db:generate": "pnpm -w drizzle-kit generate",
    "db:migrate": "pnpm -w drizzle-kit migrate",
    "db:push": "pnpm -w drizzle-kit push",
    "db:push:safe": "powershell -ExecutionPolicy Bypass -File ./scripts/safe-db-push.ps1",
    "db:reset": "powershell -ExecutionPolicy Bypass -File ./scripts/reset-dev-db.ps1",
    "db:status": "powershell -ExecutionPolicy Bypass -File ./scripts/check-db-status.ps1",
    "db:studio": "pnpm -w drizzle-kit studio",
    "db:up": "docker compose up -d db",
    "dev": "turbo run dev --parallel",
    "dev:bff": "pnpm --filter bff dev",
    "dev:web": "pnpm --filter web dev",
    "docs:api": "redocly build-docs packages/contracts/openapi/openapi.json -o api-docs.html",
    "docs:lint": "redocly lint packages/contracts/openapi/openapi.json",
    "docs:preview": "redocly preview-docs packages/contracts/openapi/openapi.json",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:staged": "prettier --write --ignore-unknown",
    "link-check": "pnpm --filter @aibos/contracts check",
    "lint": "turbo run lint",
    "preinstall": "node ./scripts/enforce-pnpm.mjs",
    "rebuild": "pnpm clean && pnpm build",
    "rules:build": "pnpm -w -F @aibos/posting-rules build",
    "syncpack:check": "syncpack lint",
    "syncpack:fix": "syncpack fix-mismatches",
    "syncpack:list": "syncpack list-mismatches",
    "test": "vitest",
    "test:coverage": "vitest --coverage --reporter=json --outputFile=coverage/coverage-final.json",
    "test:security": "set EXPORT_API_SECURITY_HELPERS=1 && vitest tests/api-security.spec.ts",
    "typecheck": "turbo run typecheck",
    "verify": "pnpm contracts:gen && pnpm rules:build",
    "worker": "pnpm --filter worker dev"
  }
}
