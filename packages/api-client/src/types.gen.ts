/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/sales-invoices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Post a Sales Invoice */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["SalesInvoice"];
                };
            };
            responses: {
                /** @description Journal created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PostSIResponse"];
                    };
                };
                /** @description Validation error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        SalesInvoice: {
            id: string;
            company_id: string;
            customer_id: string;
            /** Format: date-time */
            doc_date: string;
            currency: string;
            lines: components["schemas"]["SalesInvoiceLine"][];
            totals: components["schemas"]["SalesInvoiceTotals"];
        };
        SalesInvoiceLine: {
            description: string;
            qty: number;
            unit_price: components["schemas"]["Money"];
            tax_code?: string;
        };
        SalesInvoiceTotals: {
            total: components["schemas"]["Money"];
            tax_total: components["schemas"]["Money"];
            grand_total: components["schemas"]["Money"];
        };
        Money: {
            amount: string;
            currency: string;
        };
        PostSIResponse: {
            journal_id: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
